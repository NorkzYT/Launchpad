http:
  routers:
    ########################################################################################################################################################################

    ## EXTERNAL ROUTING ##

    # Traefik routing
    traefik:
      entryPoints:
        - https
      rule: 'Host(`vpstraefik.domain.com`)'
      service: traefik
      middlewares:
        - 'securityHeaders'
        - 'authentik-auth'

    # Traefik API routing
    traefik-api:
      rule: 'Host(`vpstraefikapi.domain.com`)'
      service: api@internal
      middlewares:
        - 'securityHeaders'

    #VSCode routing
    vscode:
      entryPoints:
        - https
      rule: 'Host(`vpsvscode.domain.com`)'
      service: vscode
      middlewares:
        - 'securityHeaders'
        - 'authentik-auth'

    #VaultWarden routing
    vwarden:
      entryPoints:
        - https
      rule: 'Host(`vpsvwarden.domain.com`)'
      service: vwarden
      middlewares:
        - 'securityHeaders'
        # - "authentik-auth"

    #mrss-web routing
    mrss-web:
      entryPoints:
        - https
      rule: 'Host(`vpsmonitorss.domain.com`)'
      service: mrss-web
      middlewares:
        - 'securityHeaders'
        - 'authentik-auth'

    #authentik auth routing
    authentik:
      entryPoints:
        - https
      rule: 'Host(`vpsauth.domain.com`)'
      service: authentik-auth
      middlewares:
        - 'securityHeaders'

    #Gitlab routing
    gitlab:
      entryPoints:
        - https
      rule: 'Host(`vpsgitl.domain.com`)'
      service: gitlab
      middlewares:
        - 'securityHeaders'
        - 'authentik-auth'

    #Searxng routing
    searxng:
      entryPoints:
        - https
      rule: 'Host(`searchx.domain.com`)'
      service: searxng
      middlewares:
        - 'securityHeaders'

    #Dashy routing
    dashy:
      entryPoints:
        - https
      rule: 'Host(`vpsdashy.domain.com`)'
      service: dashy
      middlewares:
        - 'securityHeaders'
        - 'authentik-auth'

    #Rport routing
    #rport:
    #  entryPoints:
    #    - https
    #  rule: 'Host(`vpsrport.domain.com`)'
    #  service: rport
    #  middlewares:
    #    - "securityHeaders"
    #- "authentik-auth"

    #Linkace service
    linkace:
      entryPoints:
        - https
      rule: 'Host(`vpslinkace.domain.com`)'
      service: linkace
      middlewares:
        - 'securityHeaders'
        - 'authentik-auth'

  ########################################################################################################################################################################

  ## SERVICES ##
  services:
    # Traefik service
    traefik:
      loadBalancer:
        servers:
          - url: http://traefik:8080

    # VSCode service
    vscode:
      loadbalancer:
        servers:
          - url: http://vscode:8443

    # Vault Warden service
    vwarden:
      loadbalancer:
        servers:
          - url: http://vaultwarden:80

    # MonitoRSS service
    mrss-web:
      loadbalancer:
        servers:
          - url: http://mrss-web:8081

    # Authentic auth service
    authentik-auth:
      loadbalancer:
        servers:
          - url: http://authentik:9000

    # Gitlab service
    gitlab:
      loadbalancer:
        servers:
          - url: http://gitlab-ce:80

    # Searxng service
    searxng:
      loadbalancer:
        servers:
          - url: http://searxng:8080

    # Dashy service
    dashy:
      loadbalancer:
        servers:
          - url: http://dashy:80

    # Rport service
    #rport:
    #  loadbalancer:
    #    servers:
    #      - url: http://132.145.131.225:5000

    # Linkace service
    linkace:
      loadbalancer:
        servers:
          - url: http://linkace:80

  ########################################################################################################################################################################

  ## MIDDLEWARES ##
  middlewares:
    # Authentik guard
    authentik-auth:
      forwardauth:
        address: http://authentik:9000/outpost.goauthentik.io/auth/traefik
        trustForwardHeader: true
        authResponseHeaders:
          - X-authentik-username
          - X-authentik-groups
          - X-authentik-email
          - X-authentik-name
          - X-authentik-uid
          - X-authentik-jwt
          - X-authentik-meta-jwks
          - X-authentik-meta-outpost
          - X-authentik-meta-provider
          - X-authentik-meta-app
          - X-authentik-meta-version

    # Pterodactyl corsALL
    corsAll:
      headers:
        customRequestHeaders:
          X-Forwarded-Proto: 'https'
        customResponseHeaders:
          X-Forwarded-Proto: 'https'
        accessControlAllowMethods:
          - OPTION
          - POST
          - GET
          - PUT
          - DELETE
        accessControlAllowHeaders:
          - '*'
        accessControlAllowOriginList:
          - '*'
        accessControlMaxAge: 100
        addVaryHeader: true

    # Security headers
    securityHeaders:
      headers:
        customResponseHeaders:
          X-Robots-Tag: 'none,noarchive,nosnippet,notranslate,noimageindex'
          server: ''
        sslProxyHeaders:
          X-Forwarded-Proto: https
        referrerPolicy: 'same-origin'
        hostsProxyHeaders:
          - 'X-Forwarded-Host'
        customRequestHeaders:
          X-Forwarded-Proto: 'https'
        contentTypeNosniff: true
        browserXssFilter: true
        forceSTSHeader: true
        stsIncludeSubdomains: true
        stsSeconds: 63072000
        stsPreload: true
    gzip:
      compress: {}
    ########################################################################################################################################################################

    traefik-real-ip:
      plugin:
        traefik-real-ip:
          excludednets: 1.1.1.1/24
