version: '3.9'
services:
  authentik:
    image: beryju/authentik:2023.10
    container_name: authentik
    hostname: authentik
    restart: unless-stopped
    command: server
    environment:
      - AUTHENTIK_REDIS__HOST=${AUTHENTIK_REDIS__HOST}
      - AUTHENTIK_POSTGRESQL__HOST=${AUTHENTIK_POSTGRESQL__HOST}
      - AUTHENTIK_POSTGRESQL__USER=${AUTHENTIK_POSTGRESQL__USER}
      - AUTHENTIK_POSTGRESQL__NAME=${AUTHENTIK_POSTGRESQL__NAME}
      - AUTHENTIK_POSTGRESQL__PASSWORD=${AUTHENTIK_POSTGRESQL__PASSWORD}
      - AUTHENTIK_ERROR_REPORTING__ENABLED=${AUTHENTIK_ERROR_REPORTING__ENABLED}
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY}
      - AUTHENTIK_AUTHENTIK__GEOIP=${AUTHENTIK_AUTHENTIK__GEOIP}
      - GEOIPUPDATE_ACCOUNT_ID=${AUTHENTIK_GEOIPUPDATE_ACCOUNT_ID}
      - GEOIPUPDATE_LICENSE_KEY=${AUTHENTIK_GEOIPUPDATE_LICENSE_KEY}
    volumes:
      - /mnt/appdata/authentik/media:/media
      - /mnt/appdata/authentik/custom-templates:/templates
      - /var/run/docker.sock:/var/run/docker.sock
      - /mnt/appdata/authentik/geoip:/geoip # Optional
    ports:
      - 9815:9000
      - 9816:9443
    networks:
      - proxy

  worker:
    image: beryju/authentik:2023.10
    container_name: authentik_worker
    hostname: authentik_worker
    restart: unless-stopped
    command: worker
    environment:
      - AUTHENTIK_REDIS__HOST=${WORKER_AUTHENTIK_REDIS__HOST}
      - AUTHENTIK_POSTGRESQL__HOST=${WORKER_AUTHENTIK_POSTGRESQL__HOST}
      - AUTHENTIK_POSTGRESQL__USER=${WORKER_AUTHENTIK_POSTGRESQL__USER}
      - AUTHENTIK_POSTGRESQL__NAME=${WORKER_AUTHENTIK_POSTGRESQL__NAME}
      - AUTHENTIK_POSTGRESQL__PASSWORD=${WORKER_AUTHENTIK_POSTGRESQL__PASSWORD}
      - AUTHENTIK_ERROR_REPORTING__ENABLED=${WORKER_AUTHENTIK_ERROR_REPORTING__ENABLED}
      - AUTHENTIK_SECRET_KEY=${WORKER_AUTHENTIK_SECRET_KEY}
    user: root
    volumes:
      - /mnt/appdata/authentik/media:/media
      - /mnt/appdata/authentik/certs:/certs
      - /var/run/docker.sock:/var/run/docker.sock
      - /mnt/appdata/authentik/custom-templates:/templates
    networks:
      - proxy

  geoipupdate: # Optional
    image: maxmindinc/geoipupdate:v6.1
    container_name: geoipupdate
    hostname: geoipupdate
    volumes:
      - /mnt/appdata/geoip:/usr/share/GeoIP
    environment:
      - GEOIPUPDATE_ACCOUNT_ID=${GEOIPUPDATE_ACCOUNT_ID}
      - GEOIPUPDATE_LICENSE_KEY=${GEOIPUPDATE_LICENSE_KEY}
      - GEOIPUPDATE_EDITION_IDS=${GEOIPUPDATE_EDITION_IDS}
      - GEOIPUPDATE_FREQUENCY=${GEOIPUPDATE_FREQUENCY}
      - GEOIPUPDATE_HOST=${GEOIPUPDATE_HOST}
    networks:
      - proxy # ---------

  postgresql-authentik:
    image: postgres:16-bullseye # Only this version works with Authentik, if another version then the following will occur: `Postgres - REQUIRES 10 or up`
    container_name: postgresql-authentik
    hostname: postgresql-authentik
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_AUTHENTIK_PASSWORD}
    ports:
      - 5432:8080
    networks:
      - proxy

networks:
  proxy:
    driver: bridge
    external: true
